{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\Documents\\\\assi3test\\\\Option 2 - ChatApplication - Final - Copy\\\\frontend\\\\src\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axiosInstance from '../components/axiosConfig';\nimport io from 'socket.io-client';\nimport './Chat.css'; // Import CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000'); // Ensure this matches your backend URL\n\nconst Chat = () => {\n  _s();\n  const [user, setUser] = useState({});\n  const {\n    userId\n  } = useParams();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  const typingTimeoutRef = useRef(null);\n  const receivedMessageIds = useRef(new Set());\n  useEffect(() => {\n    const fetchMessages = async () => {\n      try {\n        const res = await axiosInstance.get(`/chat/${userId}`);\n        setMessages(res.data);\n        // Store the received message IDs to avoid duplicates\n        res.data.forEach(msg => receivedMessageIds.current.add(msg._id));\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    fetchMessages();\n    socket.on('receiveMessage', message => {\n      // Check if the message ID already exists to avoid duplication\n      if (!receivedMessageIds.current.has(message._id)) {\n        setMessages(prevMessages => [...prevMessages, message]);\n        receivedMessageIds.current.add(message._id);\n      }\n    });\n    socket.on('typing', data => {\n      if (data.userId === userId) {\n        setIsTyping(true);\n      }\n    });\n    socket.on('stopTyping', data => {\n      if (data.userId === userId) {\n        setIsTyping(false);\n      }\n    });\n    socket.on('messageRead', data => {\n      if (data.userId === userId) {\n        setMessages(prevMessages => prevMessages.map(msg => msg._id === data.messageId ? {\n          ...msg,\n          read: true\n        } : msg));\n      }\n    });\n    return () => {\n      socket.off('receiveMessage');\n      socket.off('typing');\n      socket.off('stopTyping');\n      socket.off('messageRead');\n    };\n  }, [userId]);\n  const handleSendMessage = async () => {\n    if (newMessage.trim() === '') return;\n    try {\n      const res = await axiosInstance.post(`/chat/${userId}`, {\n        message: newMessage\n      });\n      socket.emit('sendMessage', res.data); // Emit the message to the server\n      setMessages([...messages, res.data]);\n      receivedMessageIds.current.add(res.data._id); // Add the new message ID to the set\n      setNewMessage('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  const handleTyping = () => {\n    if (typingTimeoutRef.current) {\n      clearTimeout(typingTimeoutRef.current);\n    } else {\n      socket.emit('typing', {\n        userId: localStorage.getItem('userId')\n      });\n    }\n    typingTimeoutRef.current = setTimeout(() => {\n      socket.emit('stopTyping', {\n        userId: localStorage.getItem('userId')\n      });\n      typingTimeoutRef.current = null;\n    }, 2000);\n  };\n  const handleReadMessage = messageId => {\n    socket.emit('messageRead', {\n      userId: localStorage.getItem('userId'),\n      messageId\n    });\n  };\n  useEffect(() => {\n    messages.forEach(msg => {\n      if (!msg.read && msg.sender !== localStorage.getItem('userId')) {\n        handleReadMessage(msg._id);\n      }\n    });\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Chat with \", userId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-window\",\n      children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `chat-message ${msg.sender === localStorage.getItem('userId') ? 'sent' : 'received'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.sender === localStorage.getItem('userId') ? 'You' : 'Them', \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), \" \", msg.text, msg.read && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"read-receipt\",\n          children: \"Read\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 26\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this)), isTyping && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"typing-indicator\",\n        children: \"The other user is typing...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        onKeyPress: handleTyping,\n        placeholder: \"Type your message here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"535WujvZto9qKdvHPJTjtpXukwU=\", false, function () {\n  return [useParams];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useParams","axiosInstance","io","jsxDEV","_jsxDEV","socket","Chat","_s","user","setUser","userId","messages","setMessages","newMessage","setNewMessage","isTyping","setIsTyping","typingTimeoutRef","receivedMessageIds","Set","fetchMessages","res","get","data","forEach","msg","current","add","_id","err","console","error","on","message","has","prevMessages","map","messageId","read","off","handleSendMessage","trim","post","emit","handleTyping","clearTimeout","localStorage","getItem","setTimeout","handleReadMessage","sender","className","children","fileName","_jsxFileName","lineNumber","columnNumber","index","text","type","value","onChange","e","target","onKeyPress","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Hp/Documents/assi3test/Option 2 - ChatApplication - Final - Copy/frontend/src/components/Chat.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axiosInstance from '../components/axiosConfig';\r\nimport io from 'socket.io-client';\r\nimport './Chat.css'; // Import CSS file\r\n\r\nconst socket = io('http://localhost:5000'); // Ensure this matches your backend URL\r\n\r\nconst Chat = () => {\r\n  const [user, setUser] = useState({});\r\n  const { userId } = useParams();\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [isTyping, setIsTyping] = useState(false);\r\n  const typingTimeoutRef = useRef(null);\r\n  const receivedMessageIds = useRef(new Set());\r\n\r\n  useEffect(() => {\r\n    const fetchMessages = async () => {\r\n      try {\r\n        const res = await axiosInstance.get(`/chat/${userId}`);\r\n        setMessages(res.data);\r\n        // Store the received message IDs to avoid duplicates\r\n        res.data.forEach(msg => receivedMessageIds.current.add(msg._id));\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    };\r\n\r\n    fetchMessages();\r\n\r\n    socket.on('receiveMessage', (message) => {\r\n      // Check if the message ID already exists to avoid duplication\r\n      if (!receivedMessageIds.current.has(message._id)) {\r\n        setMessages((prevMessages) => [...prevMessages, message]);\r\n        receivedMessageIds.current.add(message._id);\r\n      }\r\n    });\r\n\r\n    socket.on('typing', (data) => {\r\n      if (data.userId === userId) {\r\n        setIsTyping(true);\r\n      }\r\n    });\r\n\r\n    socket.on('stopTyping', (data) => {\r\n      if (data.userId === userId) {\r\n        setIsTyping(false);\r\n      }\r\n    });\r\n\r\n    socket.on('messageRead', (data) => {\r\n      if (data.userId === userId) {\r\n        setMessages((prevMessages) =>\r\n          prevMessages.map((msg) =>\r\n            msg._id === data.messageId ? { ...msg, read: true } : msg\r\n          )\r\n        );\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      socket.off('receiveMessage');\r\n      socket.off('typing');\r\n      socket.off('stopTyping');\r\n      socket.off('messageRead');\r\n    };\r\n  }, [userId]);\r\n\r\n  const handleSendMessage = async () => {\r\n    if (newMessage.trim() === '') return;\r\n\r\n    try {\r\n      const res = await axiosInstance.post(`/chat/${userId}`, { message: newMessage });\r\n      socket.emit('sendMessage', res.data); // Emit the message to the server\r\n      setMessages([...messages, res.data]);\r\n      receivedMessageIds.current.add(res.data._id); // Add the new message ID to the set\r\n      setNewMessage('');\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const handleTyping = () => {\r\n    if (typingTimeoutRef.current) {\r\n      clearTimeout(typingTimeoutRef.current);\r\n    } else {\r\n      socket.emit('typing', { userId: localStorage.getItem('userId') });\r\n    }\r\n\r\n    typingTimeoutRef.current = setTimeout(() => {\r\n      socket.emit('stopTyping', { userId: localStorage.getItem('userId') });\r\n      typingTimeoutRef.current = null;\r\n    }, 2000);\r\n  };\r\n\r\n  const handleReadMessage = (messageId) => {\r\n    socket.emit('messageRead', { userId: localStorage.getItem('userId'), messageId });\r\n  };\r\n\r\n  useEffect(() => {\r\n    messages.forEach((msg) => {\r\n      if (!msg.read && msg.sender !== localStorage.getItem('userId')) {\r\n        handleReadMessage(msg._id);\r\n      }\r\n    });\r\n  }, [messages]);\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <h2>Chat with {userId}</h2>\r\n      <div className=\"chat-window\">\r\n        {messages.map((msg, index) => (\r\n          <div key={index} className={`chat-message ${msg.sender === localStorage.getItem('userId') ? 'sent' : 'received'}`}>\r\n            <strong>{msg.sender === localStorage.getItem('userId') ? 'You' : 'Them'}:</strong> {msg.text}\r\n            {msg.read && <span className=\"read-receipt\">Read</span>}\r\n          </div>\r\n        ))}\r\n        {isTyping && <div className=\"typing-indicator\">The other user is typing...</div>}\r\n      </div>\r\n      <div className=\"chat-input\">\r\n        <input\r\n          type=\"text\"\r\n          value={newMessage}\r\n          onChange={(e) => setNewMessage(e.target.value)}\r\n          onKeyPress={handleTyping}\r\n          placeholder=\"Type your message here\"\r\n        />\r\n        <button onClick={handleSendMessage}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}